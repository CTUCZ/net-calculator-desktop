# Form implementation generated from reading ui file '.\calculator-gui.ui'
#
# Created by: PyQt6 UI code generator 6.5.2
#
# WARNING: Any manual changes made to this file will be lost when pyuic6 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt6 import QtCore, QtGui, QtWidgets


class Ui_AppMainWindow(object):
    def setupUi(self, AppMainWindow):
        AppMainWindow.setObjectName("AppMainWindow")
        AppMainWindow.resize(735, 855)
        AppMainWindow.setMinimumSize(QtCore.QSize(640, 400))
        AppMainWindow.setMaximumSize(QtCore.QSize(735, 855))
        AppMainWindow.setStyleSheet("QGroupBox {font-weight: bold;}")
        self.centralwidget = QtWidgets.QWidget(parent=AppMainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.centralwidget)
        self.verticalLayout.setObjectName("verticalLayout")
        self.scrollArea = QtWidgets.QScrollArea(parent=self.centralwidget)
        self.scrollArea.setWidgetResizable(True)
        self.scrollArea.setObjectName("scrollArea")
        self.scrollAreaWidgetContents = QtWidgets.QWidget()
        self.scrollAreaWidgetContents.setGeometry(QtCore.QRect(0, 0, 715, 835))
        self.scrollAreaWidgetContents.setObjectName("scrollAreaWidgetContents")
        self.verticalLayout_2 = QtWidgets.QVBoxLayout(self.scrollAreaWidgetContents)
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        self.frame_fixed = QtWidgets.QFrame(parent=self.scrollAreaWidgetContents)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.Preferred, QtWidgets.QSizePolicy.Policy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.frame_fixed.sizePolicy().hasHeightForWidth())
        self.frame_fixed.setSizePolicy(sizePolicy)
        self.frame_fixed.setMinimumSize(QtCore.QSize(680, 800))
        self.frame_fixed.setMaximumSize(QtCore.QSize(680, 800))
        self.frame_fixed.setFrameShape(QtWidgets.QFrame.Shape.StyledPanel)
        self.frame_fixed.setFrameShadow(QtWidgets.QFrame.Shadow.Raised)
        self.frame_fixed.setObjectName("frame_fixed")
        self.section_B = QtWidgets.QGroupBox(parent=self.frame_fixed)
        self.section_B.setGeometry(QtCore.QRect(0, 210, 680, 170))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.Preferred, QtWidgets.QSizePolicy.Policy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.section_B.sizePolicy().hasHeightForWidth())
        self.section_B.setSizePolicy(sizePolicy)
        self.section_B.setMinimumSize(QtCore.QSize(680, 170))
        self.section_B.setMaximumSize(QtCore.QSize(680, 170))
        self.section_B.setObjectName("section_B")
        self.nbr_max_l = QtWidgets.QLabel(parent=self.section_B)
        self.nbr_max_l.setGeometry(QtCore.QRect(20, 40, 231, 21))
        self.nbr_max_l.setObjectName("nbr_max_l")
        self.nbr_avg = QtWidgets.QDoubleSpinBox(parent=self.section_B)
        self.nbr_avg.setGeometry(QtCore.QRect(320, 80, 91, 22))
        self.nbr_avg.setSizeIncrement(QtCore.QSize(0, 0))
        self.nbr_avg.setDecimals(1)
        self.nbr_avg.setMinimum(0.1)
        self.nbr_avg.setMaximum(1000000.0)
        self.nbr_avg.setSingleStep(0.1)
        self.nbr_avg.setProperty("value", 500.0)
        self.nbr_avg.setObjectName("nbr_avg")
        self.nbr_avg_l_u = QtWidgets.QLabel(parent=self.section_B)
        self.nbr_avg_l_u.setGeometry(QtCore.QRect(420, 80, 41, 21))
        self.nbr_avg_l_u.setObjectName("nbr_avg_l_u")
        self.nbr_max_l_u = QtWidgets.QLabel(parent=self.section_B)
        self.nbr_max_l_u.setGeometry(QtCore.QRect(420, 40, 41, 21))
        self.nbr_max_l_u.setObjectName("nbr_max_l_u")
        self.nbr_avg_l = QtWidgets.QLabel(parent=self.section_B)
        self.nbr_avg_l.setGeometry(QtCore.QRect(20, 80, 221, 21))
        self.nbr_avg_l.setObjectName("nbr_avg_l")
        self.label = QtWidgets.QLabel(parent=self.section_B)
        self.label.setGeometry(QtCore.QRect(20, 130, 221, 16))
        self.label.setObjectName("label")
        self.nbr_max = QtWidgets.QDoubleSpinBox(parent=self.section_B)
        self.nbr_max.setGeometry(QtCore.QRect(320, 40, 91, 22))
        self.nbr_max.setSizeIncrement(QtCore.QSize(0, 0))
        self.nbr_max.setDecimals(1)
        self.nbr_max.setMinimum(0.1)
        self.nbr_max.setMaximum(1000000.0)
        self.nbr_max.setSingleStep(0.1)
        self.nbr_max.setProperty("value", 1000.0)
        self.nbr_max.setObjectName("nbr_max")
        self.out_uf = QtWidgets.QTextBrowser(parent=self.section_B)
        self.out_uf.setGeometry(QtCore.QRect(320, 120, 91, 31))
        self.out_uf.setObjectName("out_uf")
        self.B1_help = QtWidgets.QPushButton(parent=self.section_B)
        self.B1_help.setGeometry(QtCore.QRect(620, 40, 41, 24))
        self.B1_help.setText("?")
        self.B1_help.setObjectName("B1_help")
        self.B_help = QtWidgets.QPushButton(parent=self.section_B)
        self.B_help.setGeometry(QtCore.QRect(620, -1, 41, 24))
        self.B_help.setText("?")
        self.B_help.setObjectName("B_help")
        self.B2_help = QtWidgets.QPushButton(parent=self.section_B)
        self.B2_help.setGeometry(QtCore.QRect(620, 80, 41, 24))
        self.B2_help.setText("?")
        self.B2_help.setObjectName("B2_help")
        self.B3_help = QtWidgets.QPushButton(parent=self.section_B)
        self.B3_help.setGeometry(QtCore.QRect(620, 120, 41, 24))
        self.B3_help.setText("?")
        self.B3_help.setObjectName("B3_help")
        self.section_A = QtWidgets.QGroupBox(parent=self.frame_fixed)
        self.section_A.setGeometry(QtCore.QRect(0, 0, 680, 200))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.Preferred, QtWidgets.QSizePolicy.Policy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.section_A.sizePolicy().hasHeightForWidth())
        self.section_A.setSizePolicy(sizePolicy)
        self.section_A.setMinimumSize(QtCore.QSize(680, 200))
        self.section_A.setMaximumSize(QtCore.QSize(680, 200))
        self.section_A.setObjectName("section_A")
        self.ipheader_l_u = QtWidgets.QLabel(parent=self.section_A)
        self.ipheader_l_u.setGeometry(QtCore.QRect(400, 120, 41, 21))
        self.ipheader_l_u.setObjectName("ipheader_l_u")
        self.capacity_l_u = QtWidgets.QLabel(parent=self.section_A)
        self.capacity_l_u.setGeometry(QtCore.QRect(420, 40, 41, 21))
        self.capacity_l_u.setObjectName("capacity_l_u")
        self.agg = QtWidgets.QSpinBox(parent=self.section_A)
        self.agg.setGeometry(QtCore.QRect(320, 160, 61, 22))
        self.agg.setMinimum(1)
        self.agg.setMaximum(99999)
        self.agg.setProperty("value", 256)
        self.agg.setDisplayIntegerBase(10)
        self.agg.setObjectName("agg")
        self.mtu = QtWidgets.QSpinBox(parent=self.section_A)
        self.mtu.setGeometry(QtCore.QRect(320, 80, 61, 22))
        self.mtu.setMinimum(1)
        self.mtu.setMaximum(99999)
        self.mtu.setProperty("value", 1500)
        self.mtu.setDisplayIntegerBase(10)
        self.mtu.setObjectName("mtu")
        self.mtu_l = QtWidgets.QLabel(parent=self.section_A)
        self.mtu_l.setGeometry(QtCore.QRect(20, 80, 201, 21))
        self.mtu_l.setObjectName("mtu_l")
        self.agg_l_u = QtWidgets.QLabel(parent=self.section_A)
        self.agg_l_u.setGeometry(QtCore.QRect(300, 160, 21, 21))
        self.agg_l_u.setObjectName("agg_l_u")
        self.capacity_l = QtWidgets.QLabel(parent=self.section_A)
        self.capacity_l.setGeometry(QtCore.QRect(20, 40, 261, 21))
        self.capacity_l.setObjectName("capacity_l")
        self.agg_l = QtWidgets.QLabel(parent=self.section_A)
        self.agg_l.setGeometry(QtCore.QRect(20, 160, 261, 21))
        self.agg_l.setObjectName("agg_l")
        self.ipheader = QtWidgets.QComboBox(parent=self.section_A)
        self.ipheader.setGeometry(QtCore.QRect(320, 120, 71, 22))
        self.ipheader.setObjectName("ipheader")
        self.ipheader.addItem("")
        self.ipheader.addItem("")
        self.ipheader_l = QtWidgets.QLabel(parent=self.section_A)
        self.ipheader_l.setGeometry(QtCore.QRect(20, 120, 121, 21))
        self.ipheader_l.setObjectName("ipheader_l")
        self.capacity = QtWidgets.QDoubleSpinBox(parent=self.section_A)
        self.capacity.setGeometry(QtCore.QRect(320, 40, 91, 22))
        self.capacity.setSizeIncrement(QtCore.QSize(0, 0))
        self.capacity.setLocale(QtCore.QLocale(QtCore.QLocale.Language.Czech, QtCore.QLocale.Country.CzechRepublic))
        self.capacity.setDecimals(1)
        self.capacity.setMinimum(0.1)
        self.capacity.setMaximum(1000000.0)
        self.capacity.setSingleStep(0.1)
        self.capacity.setProperty("value", 2488.0)
        self.capacity.setObjectName("capacity")
        self.mtu_l_u = QtWidgets.QLabel(parent=self.section_A)
        self.mtu_l_u.setGeometry(QtCore.QRect(390, 80, 41, 21))
        self.mtu_l_u.setObjectName("mtu_l_u")
        self.A1_help = QtWidgets.QPushButton(parent=self.section_A)
        self.A1_help.setGeometry(QtCore.QRect(620, 39, 41, 24))
        self.A1_help.setText("?")
        self.A1_help.setObjectName("A1_help")
        self.A_help = QtWidgets.QPushButton(parent=self.section_A)
        self.A_help.setGeometry(QtCore.QRect(620, 0, 41, 24))
        self.A_help.setText("?")
        self.A_help.setObjectName("A_help")
        self.A2_help = QtWidgets.QPushButton(parent=self.section_A)
        self.A2_help.setGeometry(QtCore.QRect(620, 79, 41, 24))
        self.A2_help.setText("?")
        self.A2_help.setObjectName("A2_help")
        self.A3_help = QtWidgets.QPushButton(parent=self.section_A)
        self.A3_help.setGeometry(QtCore.QRect(620, 119, 41, 24))
        self.A3_help.setText("?")
        self.A3_help.setObjectName("A3_help")
        self.A4_help = QtWidgets.QPushButton(parent=self.section_A)
        self.A4_help.setGeometry(QtCore.QRect(620, 159, 41, 24))
        self.A4_help.setText("?")
        self.A4_help.setObjectName("A4_help")
        self.section_C = QtWidgets.QGroupBox(parent=self.frame_fixed)
        self.section_C.setGeometry(QtCore.QRect(0, 390, 680, 80))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.Preferred, QtWidgets.QSizePolicy.Policy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.section_C.sizePolicy().hasHeightForWidth())
        self.section_C.setSizePolicy(sizePolicy)
        self.section_C.setMinimumSize(QtCore.QSize(680, 80))
        self.section_C.setMaximumSize(QtCore.QSize(680, 80))
        self.section_C.setObjectName("section_C")
        self.probability = QtWidgets.QSpinBox(parent=self.section_C)
        self.probability.setGeometry(QtCore.QRect(320, 40, 61, 22))
        self.probability.setSizeIncrement(QtCore.QSize(0, 0))
        self.probability.setMinimum(1)
        self.probability.setMaximum(99)
        self.probability.setProperty("value", 90)
        self.probability.setObjectName("probability")
        self.probability_l = QtWidgets.QLabel(parent=self.section_C)
        self.probability_l.setGeometry(QtCore.QRect(20, 40, 131, 21))
        self.probability_l.setObjectName("probability_l")
        self.probability_l_u = QtWidgets.QLabel(parent=self.section_C)
        self.probability_l_u.setGeometry(QtCore.QRect(390, 40, 21, 21))
        self.probability_l_u.setObjectName("probability_l_u")
        self.C1_help = QtWidgets.QPushButton(parent=self.section_C)
        self.C1_help.setGeometry(QtCore.QRect(620, 40, 41, 24))
        self.C1_help.setText("?")
        self.C1_help.setObjectName("C1_help")
        self.C_help = QtWidgets.QPushButton(parent=self.section_C)
        self.C_help.setGeometry(QtCore.QRect(620, -1, 41, 24))
        self.C_help.setText("?")
        self.C_help.setObjectName("C_help")
        self.section_D = QtWidgets.QGroupBox(parent=self.frame_fixed)
        self.section_D.setGeometry(QtCore.QRect(0, 480, 680, 130))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.Preferred, QtWidgets.QSizePolicy.Policy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.section_D.sizePolicy().hasHeightForWidth())
        self.section_D.setSizePolicy(sizePolicy)
        self.section_D.setMinimumSize(QtCore.QSize(680, 130))
        self.section_D.setMaximumSize(QtCore.QSize(680, 130))
        self.section_D.setObjectName("section_D")
        self.sdr_l = QtWidgets.QLabel(parent=self.section_D)
        self.sdr_l.setGeometry(QtCore.QRect(20, 40, 151, 21))
        self.sdr_l.setObjectName("sdr_l")
        self.out_sdr_noUF = QtWidgets.QTextBrowser(parent=self.section_D)
        self.out_sdr_noUF.setGeometry(QtCore.QRect(220, 30, 91, 31))
        self.out_sdr_noUF.setObjectName("out_sdr_noUF")
        self.out_sdr_UF = QtWidgets.QTextBrowser(parent=self.section_D)
        self.out_sdr_UF.setGeometry(QtCore.QRect(430, 30, 91, 31))
        self.out_sdr_UF.setObjectName("out_sdr_UF")
        self.sdr_agg_l = QtWidgets.QLabel(parent=self.section_D)
        self.sdr_agg_l.setGeometry(QtCore.QRect(20, 90, 201, 21))
        self.sdr_agg_l.setObjectName("sdr_agg_l")
        self.out_sdr_agg = QtWidgets.QTextBrowser(parent=self.section_D)
        self.out_sdr_agg.setGeometry(QtCore.QRect(220, 80, 91, 31))
        self.out_sdr_agg.setObjectName("out_sdr_agg")
        self.out_sdr_noUF_u = QtWidgets.QLabel(parent=self.section_D)
        self.out_sdr_noUF_u.setGeometry(QtCore.QRect(320, 40, 81, 21))
        self.out_sdr_noUF_u.setObjectName("out_sdr_noUF_u")
        self.out_sdr_UF_u = QtWidgets.QLabel(parent=self.section_D)
        self.out_sdr_UF_u.setGeometry(QtCore.QRect(530, 40, 81, 21))
        self.out_sdr_UF_u.setObjectName("out_sdr_UF_u")
        self.out_sdr_agg_u = QtWidgets.QLabel(parent=self.section_D)
        self.out_sdr_agg_u.setGeometry(QtCore.QRect(320, 90, 41, 21))
        self.out_sdr_agg_u.setObjectName("out_sdr_agg_u")
        self.D_help = QtWidgets.QPushButton(parent=self.section_D)
        self.D_help.setGeometry(QtCore.QRect(620, 0, 41, 24))
        self.D_help.setText("?")
        self.D_help.setObjectName("D_help")
        self.D123_help = QtWidgets.QPushButton(parent=self.section_D)
        self.D123_help.setGeometry(QtCore.QRect(620, 35, 41, 24))
        self.D123_help.setText("?")
        self.D123_help.setObjectName("D123_help")
        self.section_E = QtWidgets.QGroupBox(parent=self.frame_fixed)
        self.section_E.setGeometry(QtCore.QRect(0, 620, 680, 180))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.Preferred, QtWidgets.QSizePolicy.Policy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.section_E.sizePolicy().hasHeightForWidth())
        self.section_E.setSizePolicy(sizePolicy)
        self.section_E.setMinimumSize(QtCore.QSize(680, 180))
        self.section_E.setMaximumSize(QtCore.QSize(680, 180))
        self.section_E.setObjectName("section_E")
        self.out_perf_l = QtWidgets.QLabel(parent=self.section_E)
        self.out_perf_l.setGeometry(QtCore.QRect(20, 140, 151, 21))
        self.out_perf_l.setObjectName("out_perf_l")
        self.out_perf_noUF = QtWidgets.QTextBrowser(parent=self.section_E)
        self.out_perf_noUF.setGeometry(QtCore.QRect(220, 130, 91, 31))
        self.out_perf_noUF.setObjectName("out_perf_noUF")
        self.out_perf_UF = QtWidgets.QTextBrowser(parent=self.section_E)
        self.out_perf_UF.setGeometry(QtCore.QRect(430, 130, 91, 31))
        self.out_perf_UF.setObjectName("out_perf_UF")
        self.sdr_req_l = QtWidgets.QLabel(parent=self.section_E)
        self.sdr_req_l.setGeometry(QtCore.QRect(20, 40, 151, 21))
        self.sdr_req_l.setObjectName("sdr_req_l")
        self.out_perf_noUF_u = QtWidgets.QLabel(parent=self.section_E)
        self.out_perf_noUF_u.setGeometry(QtCore.QRect(320, 140, 71, 21))
        self.out_perf_noUF_u.setObjectName("out_perf_noUF_u")
        self.out_perf_UF_u = QtWidgets.QLabel(parent=self.section_E)
        self.out_perf_UF_u.setGeometry(QtCore.QRect(530, 140, 61, 21))
        self.out_perf_UF_u.setObjectName("out_perf_UF_u")
        self.sdr_req_u = QtWidgets.QLabel(parent=self.section_E)
        self.sdr_req_u.setGeometry(QtCore.QRect(320, 40, 41, 21))
        self.sdr_req_u.setObjectName("sdr_req_u")
        self.out_ntp_noUF = QtWidgets.QTextBrowser(parent=self.section_E)
        self.out_ntp_noUF.setGeometry(QtCore.QRect(220, 80, 91, 31))
        self.out_ntp_noUF.setObjectName("out_ntp_noUF")
        self.out_ntp_noUF_u = QtWidgets.QLabel(parent=self.section_E)
        self.out_ntp_noUF_u.setGeometry(QtCore.QRect(320, 90, 51, 21))
        self.out_ntp_noUF_u.setObjectName("out_ntp_noUF_u")
        self.out_ntp_UF_u = QtWidgets.QLabel(parent=self.section_E)
        self.out_ntp_UF_u.setGeometry(QtCore.QRect(530, 90, 41, 21))
        self.out_ntp_UF_u.setObjectName("out_ntp_UF_u")
        self.out_ntp_l = QtWidgets.QLabel(parent=self.section_E)
        self.out_ntp_l.setGeometry(QtCore.QRect(20, 90, 151, 21))
        self.out_ntp_l.setObjectName("out_ntp_l")
        self.out_ntp_UF = QtWidgets.QTextBrowser(parent=self.section_E)
        self.out_ntp_UF.setGeometry(QtCore.QRect(430, 80, 91, 31))
        self.out_ntp_UF.setObjectName("out_ntp_UF")
        self.E_help = QtWidgets.QPushButton(parent=self.section_E)
        self.E_help.setGeometry(QtCore.QRect(620, 0, 41, 24))
        self.E_help.setText("?")
        self.E_help.setObjectName("E_help")
        self.E1_help = QtWidgets.QPushButton(parent=self.section_E)
        self.E1_help.setGeometry(QtCore.QRect(620, 39, 41, 24))
        self.E1_help.setText("?")
        self.E1_help.setObjectName("E1_help")
        self.sdr_req = QtWidgets.QDoubleSpinBox(parent=self.section_E)
        self.sdr_req.setGeometry(QtCore.QRect(220, 39, 91, 22))
        self.sdr_req.setSizeIncrement(QtCore.QSize(0, 0))
        self.sdr_req.setDecimals(1)
        self.sdr_req.setMinimum(0.1)
        self.sdr_req.setMaximum(1000000.0)
        self.sdr_req.setSingleStep(0.1)
        self.sdr_req.setProperty("value", 100.0)
        self.sdr_req.setObjectName("sdr_req")
        self.E2_help = QtWidgets.QPushButton(parent=self.section_E)
        self.E2_help.setGeometry(QtCore.QRect(620, 89, 41, 24))
        self.E2_help.setText("?")
        self.E2_help.setObjectName("E2_help")
        self.E3_help = QtWidgets.QPushButton(parent=self.section_E)
        self.E3_help.setGeometry(QtCore.QRect(620, 132, 41, 24))
        self.E3_help.setText("?")
        self.E3_help.setObjectName("E3_help")
        self.verticalLayout_2.addWidget(self.frame_fixed)
        self.scrollArea.setWidget(self.scrollAreaWidgetContents)
        self.verticalLayout.addWidget(self.scrollArea)
        AppMainWindow.setCentralWidget(self.centralwidget)

        self.retranslateUi(AppMainWindow)
        QtCore.QMetaObject.connectSlotsByName(AppMainWindow)
        AppMainWindow.setTabOrder(self.scrollArea, self.capacity)
        AppMainWindow.setTabOrder(self.capacity, self.mtu)
        AppMainWindow.setTabOrder(self.mtu, self.ipheader)
        AppMainWindow.setTabOrder(self.ipheader, self.agg)
        AppMainWindow.setTabOrder(self.agg, self.nbr_max)
        AppMainWindow.setTabOrder(self.nbr_max, self.nbr_avg)
        AppMainWindow.setTabOrder(self.nbr_avg, self.out_uf)
        AppMainWindow.setTabOrder(self.out_uf, self.probability)
        AppMainWindow.setTabOrder(self.probability, self.out_sdr_noUF)
        AppMainWindow.setTabOrder(self.out_sdr_noUF, self.out_sdr_UF)
        AppMainWindow.setTabOrder(self.out_sdr_UF, self.out_sdr_agg)
        AppMainWindow.setTabOrder(self.out_sdr_agg, self.out_ntp_noUF)
        AppMainWindow.setTabOrder(self.out_ntp_noUF, self.out_ntp_UF)
        AppMainWindow.setTabOrder(self.out_ntp_UF, self.out_perf_noUF)
        AppMainWindow.setTabOrder(self.out_perf_noUF, self.out_perf_UF)

    def retranslateUi(self, AppMainWindow):
        _translate = QtCore.QCoreApplication.translate
        AppMainWindow.setWindowTitle(_translate("AppMainWindow", "ČTÚ Kalkulačka dopadu kapacity sítě"))
        self.section_B.setTitle(_translate("AppMainWindow", "B. Výsledky monitoringu síťového provozu (měsíc) - nepovinné"))
        self.nbr_max_l.setText(_translate("AppMainWindow", "<html><head/><body><p>B.1 Maximální bitová rychlost NBR<span style=\" vertical-align:sub;\">max</span> (L1)</p></body></html>"))
        self.nbr_avg_l_u.setText(_translate("AppMainWindow", "Mb/s"))
        self.nbr_max_l_u.setText(_translate("AppMainWindow", "Mb/s"))
        self.nbr_avg_l.setText(_translate("AppMainWindow", "<html><head/><body><p>B.2 Průměrná bitová rychlost NBR<span style=\" vertical-align:sub;\">avg</span> (L1)</p></body></html>"))
        self.label.setText(_translate("AppMainWindow", "B.3 UF (Utilization Factor - faktor využití)"))
        self.B1_help.setToolTip(_translate("AppMainWindow", "<html><head/><body><p>Nepovinné: Maximální hodnota bitové rychlosti z monitoringu síťového provozu (v časovém intervalu za poslední měsíc) v místě identifikovaného úzkého hrdla síťové infrastruktury.</p></body></html>"))
        self.B_help.setToolTip(_translate("AppMainWindow", "<html><head/><body><p>Nepovinné: V případě, že se jedná o síťovou infrastrukturu, kde není žádný koncový bod (NTP) aktivní (nejsou aktivní přípojky) nebo o plánování výstavby/projektovou činnost, je zřejmé, že nelze posuzovat výsledky monitoringu síťového provozu (nulové hodnoty). Lze pouze posuzovat výkonnost síťové infrastruktury jako celku, resp. její schopnosti zajistit požadovanou kapacitu.</p></body></html>"))
        self.B2_help.setToolTip(_translate("AppMainWindow", "<html><head/><body><p>Nepovinné: Průměrná hodnota bitové rychlosti z monitoringu síťového provozu (v časovém intervalu za poslední měsíc) v místě identifikovaného úzkého hrdla síťové infrastruktury.</p></body></html>"))
        self.B3_help.setToolTip(_translate("AppMainWindow", "<html><head/><body><p>Vyjadřuje chování koncových uživatelů v posuzované lokalitě.</p></body></html>"))
        self.section_A.setTitle(_translate("AppMainWindow", "A. Vstupní parametry sítě elektronických komunikací"))
        self.ipheader_l_u.setText(_translate("AppMainWindow", "B"))
        self.capacity_l_u.setText(_translate("AppMainWindow", "Mb/s"))
        self.mtu_l.setText(_translate("AppMainWindow", "A.2 MTU (Maximum Transport Unit)"))
        self.agg_l_u.setText(_translate("AppMainWindow", " 1 : "))
        self.capacity_l.setText(_translate("AppMainWindow", "A.1 Kapacita sítě elektronických komunikací (L1)"))
        self.agg_l.setText(_translate("AppMainWindow", "A.4 Agregační poměr (počet posuzovaných NTP)"))
        self.ipheader.setItemText(0, _translate("AppMainWindow", "20 (IPv4)"))
        self.ipheader.setItemText(1, _translate("AppMainWindow", "40 (IPv6)"))
        self.ipheader_l.setText(_translate("AppMainWindow", "A.3 Velikost IP záhlaví"))
        self.mtu_l_u.setText(_translate("AppMainWindow", "B"))
        self.A1_help.setToolTip(_translate("AppMainWindow", "<html><head/><body><p>Identifikujte kapacitu úzkého hrdla distribuční (přípojné) sítě (tzv. bottleneck).</p><p>Příklad: Optická přístupová technologie GPON s dělícím poměrem pasivní infrastruktury 1:256 (kategorie C). Konektivita centrální jednotky OLT je zajištěna pomocí SFP+ s kapacitou 10 Gb/s (IEEE 802.3ae). Úzké hrdlo bude v tomto případě samotné SFP technologie GPON (ITU-T G.984), které ve směru downstream umožňuje maximální rychlost 2488 Mb/s. </p></body></html>"))
        self.A_help.setToolTip(_translate("AppMainWindow", "<html><head/><body><p>Povinné: Vstupní parametry sítě elektronických komunikací odpovídají vždy identifikovanému úzkému hrdlu síťové infrastruktury od přípojné sítě (backhaul) po koncový bod sítě (NTP; BEREC BoR (20) 46).</p></body></html>"))
        self.A2_help.setToolTip(_translate("AppMainWindow", "<html><head/><body><p>Uveďte hodnotu <span style=\" font-style:italic;\">MTU</span> používanou v rámci posuzované distribuční (přípojné) sítě s ohledem na koncový bod sítě (NTP), nikoliv s ohledem na posuzované úzké hrdlo.</p><p>Příklad: Standardní hodnotou <span style=\" font-style:italic;\">MTU</span> je 1500 B, nicméně v případě, že je v rámci síťové infrastruktury využíváno protokolu PPPoE, bude <span style=\" font-style:italic;\">MTU</span> v místě koncového bodu sítě odpovídat hodnotě 1492 B.</p></body></html>"))
        self.A3_help.setToolTip(_translate("AppMainWindow", "<html><head/><body><p>Uveďte, jakým protokolem síťové vrstvy je (bude) služba přístupu k internetu poskytována. V případě IPv4 bude velikost IP záhlaví odpovídat nejčastěji hodnotě 20 B, v případě IPv6 hodnotě 40 B.</p></body></html>"))
        self.A4_help.setToolTip(_translate("AppMainWindow", "<html><head/><body><p>Uveďte počet koncových bodů sítě (<span style=\" font-style:italic;\">NTP</span>), na které má dopad posuzovaná hodnota kapacity úzkého hrdla.</p><p>Příklad: Identifikované úzké hrdlo v podobě distribuční sítě zajišťuje kapacitu pro 3 lokality s GPON přístupovou technologií, kde ke každé centrální OLT jednotce je připojitelných (je připojeno) 256 koncových zřízení ONT. Celkový počet koncových bodů sítě <span style=\" font-style:italic;\">NTP</span> = 3 x 256 = 768.</p></body></html>"))
        self.section_C.setTitle(_translate("AppMainWindow", "C. Vstupní parametr Poissonova procesu"))
        self.probability_l.setText(_translate("AppMainWindow", "C.1 Pravděpodobnost"))
        self.probability_l_u.setText(_translate("AppMainWindow", "%"))
        self.C1_help.setToolTip(_translate("AppMainWindow", "<html><head/><body><p>Hodnota pravděpodobnosti by neměla být menší než 90%, kdy právě hodnota 90% se doporučuje pro pevné sítě a bezdrátové sítě ve venkovských oblastech, zatímco hodnota 95% se doporučuje pro bezdrátové sítě v městských oblastech.</p></body></html>"))
        self.C_help.setToolTip(_translate("AppMainWindow", "<html><head/><body><p>Jediným vstupním parametrem Poissonova procesu je pravděpodobnost, která má souvislost s počtem koncových bodů sítě (<span style=\" font-style:italic;\">NTP</span>), které v čase <span style=\" font-style:italic;\">t</span> generují současně datové toky do systému s hromadnou obsluhou. </p></body></html>"))
        self.section_D.setTitle(_translate("AppMainWindow", "D. Dopad agregace na rychlost"))
        self.sdr_l.setText(_translate("AppMainWindow", "D.1 Výsledná SDR"))
        self.sdr_agg_l.setText(_translate("AppMainWindow", "D.2 SDR (přirozená agregace)"))
        self.out_sdr_noUF_u.setText(_translate("AppMainWindow", "Mb/s (bez UF)"))
        self.out_sdr_UF_u.setText(_translate("AppMainWindow", "Mb/s (s UF)"))
        self.out_sdr_agg_u.setText(_translate("AppMainWindow", "Mb/s"))
        self.D_help.setToolTip(_translate("AppMainWindow", "<html><head/><body><p>Výsledek dopadu agregace na základě Poissonova procesu, a to s ohledem na identifikovanou kapacitu úzkého hrdla (bottleneck) a průměrný počet koncových bodů sítě (<span style=\" font-style:italic;\">NTP</span>).</p></body></html>"))
        self.D123_help.setToolTip(_translate("AppMainWindow", "<html><head/><body><p>Skutečně dosahovaná rychlost: Výsledná hodnota průměrné <span style=\" font-style:italic;\">SDR</span> (bez UF) popisuje výkonnost posuzované infrastruktury v místě NTP za předpokladu plného vytížení identifikované kapacity sítě (A.1), zatímco výsledná hodnota průměrné SDR (s UF) popisuje aktuální výkonnost síťové infrastruktury v místě NTP s ohledem na dostupnou kapacitu sítě (A.1) a chování koncových uživatelů dle monitoringu síťového provozu (B.3). Kalkulačka ukazuje také dopad přirozené agregace.</p></body></html>"))
        self.section_E.setTitle(_translate("AppMainWindow", "E. Výpočet průměrného počtu NTP"))
        self.out_perf_l.setText(_translate("AppMainWindow", "E.3 Pokles výkonu služby"))
        self.sdr_req_l.setText(_translate("AppMainWindow", "E.1 Požadovaná SDR - L4"))
        self.out_perf_noUF_u.setText(_translate("AppMainWindow", "% (bez UF)"))
        self.out_perf_UF_u.setText(_translate("AppMainWindow", "% (s UF)"))
        self.sdr_req_u.setText(_translate("AppMainWindow", "Mb/s"))
        self.out_ntp_noUF_u.setText(_translate("AppMainWindow", "(bez UF)"))
        self.out_ntp_UF_u.setText(_translate("AppMainWindow", "(s UF)"))
        self.out_ntp_l.setText(_translate("AppMainWindow", "E.2 Průměrný počet NTP"))
        self.E_help.setToolTip(_translate("AppMainWindow", "<html><head/><body><p>Výsledek dopadu agregace na základě Poissonova procesu s ohledem na identifikovanou kapacitu úzkého hrdla (A.1) a požadované zohlednění hodnoty průměrné skutečně dosahované rychlosti (<span style=\" font-style:italic;\">SDR</span>).</p></body></html>"))
        self.E1_help.setToolTip(_translate("AppMainWindow", "<html><head/><body><p>Nepovinné: Požadované zohlednění hodnoty průměrné <span style=\" font-style:italic;\">SDR</span>, která má být s ohledem na identifikovanou kapacitu sítě (A.1) posuzována v rámci Poissonova procesu dopadu agregace.</p></body></html>"))
        self.E2_help.setToolTip(_translate("AppMainWindow", "<html><head/><body><p>Průměrný počet koncových bodů sítě (<span style=\" font-style:italic;\">NTP</span>): Výsledná hodnota průměrného počtu <span style=\" font-style:italic;\">NTP</span> (bez UF) charakterizuje možné pokrytí NTP posuzovanou infrastrukturou s ohledem na požadovanou hodnotu <span style=\" font-style:italic;\">SDR</span> (E.1) a identifikovanou kapacitu sítě (A.1) se současným předpokladem jejího plného vytížení, zatímco výsledná hodnota průměrného počtu <span style=\" font-style:italic;\">NTP</span> (s UF) charakterizuje aktuální možnost pokrytí NTP s ohledem na dostupnou kapacitu sítě (A.1) a typické chování koncových uživatelů dle monitoringu síťového provozu (B.3) v dané lokalitě.</p></body></html>"))
        self.E3_help.setToolTip(_translate("AppMainWindow", "<html><head/><body><p>Pokles výkonu služeb (<span style=\" font-style:italic;\">P</span><span style=\" font-style:italic; vertical-align:sub;\">SDR</span>): Výsledná průměrná hodnota <span style=\" font-style:italic;\">P</span><span style=\" font-style:italic; vertical-align:sub;\">SDR</span> (bez UF) popisuje dopad výkonosti posuzované infrastruktury v místě NTP za předpokladu plného vytížení kapacity sítě (A.1) pro požadovanou průměrnou hodnotou <span style=\" font-style:italic;\">SDR</span> (E.1), zatímco výsledná průměrná hodnota <span style=\" font-style:italic;\">P</span><span style=\" font-style:italic; vertical-align:sub;\">SDR</span> (s UF) popisuje aktuální dopad na výkonost síťové infrastruktury v místě NTP s ohledem na dostupnou kapacitu sítě (A.1) a chování koncových uživatelů (B.3) dle monitoringu síťového provozu pro požadovanou průměrnou hodnotou <span style=\" font-style:italic;\">SDR</span> (E.1).</p></body></html>"))
